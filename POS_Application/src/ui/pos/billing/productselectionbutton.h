#ifndef PRODUCTSELECTIONBUTTON_H
#define PRODUCTSELECTIONBUTTON_H

#include <QWidget>

#include "product.h"

namespace Ui {
/**
 * @brief UI class for ProductSelectionButton.
 *
 * This class is generated by Qt Designer and contains the UI elements
 * for the ProductSelectionButton widget.
 */
class ProductSelectionButton;
}

/**
 * @class ProductSelectionButton
 * @brief Widget that displays product information and emits a signal when clicked.
 *
 * The ProductSelectionButton widget shows a product's image, name, and price.
 * When the button is clicked, it emits a signal with the associated Product.
 */
class ProductSelectionButton : public QWidget {
  Q_OBJECT
  
private:
  Ui::ProductSelectionButton *ui; ///< Pointer to the UI elements.
  
public:
  const Product& product; ///< Reference to the associated Product object.
  
public:
  /**
   * @brief Constructs a ProductSelectionButton.
   *
   * Initializes the widget with the provided product information and sets up
   * the UI.
   *
   * @param parent Pointer to the parent widget.
   * @param myProduct Reference to the Product object to be displayed.
   */
  explicit ProductSelectionButton(QWidget *parent, const Product& myProduct);
  
  /**
   * @brief Destructor.
   *
   * Cleans up the UI resources.
   */
  ~ProductSelectionButton();
  
protected:
  /**
   * @brief Refreshes the display with the current product information.
   *
   * Updates the UI labels with the product's name and price.
   */
  void refreshDisplay();
  
  /**
   * @brief Custom paint event for rendering the product's image.
   *
   * Overrides the QWidget::paintEvent to draw the product's pixmap with a
   * rounded rectangle clip.
   *
   * @param event Pointer to the QPaintEvent.
   */
  void paintEvent(QPaintEvent* event) override;
  
signals:
  /**
   * @brief Signal emitted when the product selection button is clicked.
   *
   * The signal carries the associated Product object.
   *
   * @param product The Product associated with the clicked button.
   */
  void on_productSelectionButton_clicked(const Product& product);
  
private slots:
  /**
   * @brief Slot triggered when the button is clicked.
   *
   * Emits the on_productSelectionButton_clicked signal with the associated product.
   */
  void on_button_clicked();
};

#endif // PRODUCTSELECTIONBUTTON_H
