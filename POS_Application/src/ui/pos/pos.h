#ifndef POS_H
#define POS_H

#include <QWidget>
#include <QStackedWidget>
#include <QPrinter>

#include "posmodel.h"

namespace Ui {
/**
 * @brief The Pos UI class.
 *
 * This class is generated by Qt Designer and contains the widgets and layouts
 * for the POS (Point of Sale) interface.
 */
class Pos;
}

/**
 * @class Pos
 * @brief Manages the POS interface for creating, canceling, and paying orders.
 *
 * The Pos class is responsible for handling the interactions within the POS interface,
 * including product selection, order management, and printing previews. It interacts with
 * the POS_Model to update the current order and manage the products added to a order.
 */
class Pos : public QWidget {
  Q_OBJECT
  
private:
  Ui::Pos* ui = nullptr;         ///< Pointer to the UI elements of the POS interface.
  POS_Model& model;              ///< Reference to the POS_Model singleton.
  QStackedWidget* pagesStack = nullptr; ///< Stack widget to manage the orders.
  
public:  
  /**
   * @brief Constructs a Pos object.
   *
   * Initializes the POS interface, sets up the UI, creates the order stack and
   * the product selection buttons.
   *
   * @param parent Pointer to the parent widget.
   * @param appModel Reference to the POS_Model instance (defaults to the singleton instance).
   */
  explicit Pos(QWidget *parent = nullptr,
      POS_Model &appModel = POS_Model::getInstance());
  
  /**
   * @brief Destroys the Pos object and cleans up allocated resources.
   */
  ~Pos();
  
private:
  /**
   * @brief Creates and prepare the necesary initial state of some ui elements.
   *
   * Creates the dynamic ui elements layout and intial elements state.
   *
   */
  void setupDisplay();
  
  void switchPage(const size_t index);
  
private slots:
  void on_billing_button_clicked();
  void on_cashier_button_clicked();
  
};

#endif // POS_H
